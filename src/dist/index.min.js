"use strict";var __awaiter=this&&this.__awaiter||function(e,i,a,s){return new(a=a||Promise)(function(t,r){function n(e){try{u(s.next(e))}catch(e){r(e)}}function o(e){try{u(s.throw(e))}catch(e){r(e)}}function u(e){e.done?t(e.value):function(t){return t instanceof a?t:new a(function(e){e(t)})}(e.value).then(n,o)}u((s=s.apply(e,i||[])).next())})},__generator=this&&this.__generator||function(r,n){var o,u,i,e,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return e={next:t(0),throw:t(1),return:t(2)},"function"==typeof Symbol&&(e[Symbol.iterator]=function(){return this}),e;function t(t){return function(e){return function(t){if(o)throw new TypeError("Generator is already executing.");for(;a;)try{if(o=1,u&&(i=2&t[0]?u.return:t[0]?u.throw||((i=u.return)&&i.call(u),0):u.next)&&!(i=i.call(u,t[1])).done)return i;switch(u=0,i&&(t=[2&t[0],i.value]),t[0]){case 0:case 1:i=t;break;case 4:return a.label++,{value:t[1],done:!1};case 5:a.label++,u=t[1],t=[0];continue;case 7:t=a.ops.pop(),a.trys.pop();continue;default:if(!(i=0<(i=a.trys).length&&i[i.length-1])&&(6===t[0]||2===t[0])){a=0;continue}if(3===t[0]&&(!i||t[1]>i[0]&&t[1]<i[3])){a.label=t[1];break}if(6===t[0]&&a.label<i[1]){a.label=i[1],i=t;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(t);break}i[2]&&a.ops.pop(),a.trys.pop();continue}t=n.call(r,a)}catch(e){t=[6,e],u=0}finally{o=i=0}if(5&t[0])throw t[1];return{value:t[0]?t[1]:void 0,done:!0}}([t,e])}}};exports.__esModule=!0;var core=require("@actions/core"),rest_1=require("@octokit/rest"),utils_1=require("./utils"),auth_action_1=require("@octokit/auth-action");function checkWorkflow(e,d,p,_,b,w){return __awaiter(this,void 0,Promise,function(){var t,r,n,o,u,i,a,s,c,l,f,h;return __generator(this,function(e){switch(e.label){case 0:return t=!1,[4,auth_action_1.createActionAuth()()];case 1:return r=e.sent(),core.info("Auth token type "+r.tokenType+", owner "+d+", repo "+p),(n=new rest_1.Octokit({auth:r.token})).actions.listWorkflowRunsForRepo(),[4,n.actions.listWorkflowRunsForRepo({owner:d,repo:p,status:_})];case 2:o=e.sent(),core.info("Received status code: "+o.status+", number or results: "+o.data.total_count),u=o.data.workflow_runs.filter(function(e){return e.id!=Number(b)}),i=u.map(function(e){return{run_id:e.id,name:e.name}}),a=0,s=i,e.label=3;case 3:return a<s.length?(c=s[a],[4,n.rest.actions.listJobsForWorkflowRun({owner:d,repo:p,run_id:c.run_id})]):[3,6];case 4:for(l=e.sent(),core.info("Received status code: "+l.status+", number or results: "+l.data.total_count),f=0,h=l.data.jobs;f<h.length;f++)if(h[f].labels.includes(w)){t=!0;break}if(t)return[3,6];e.label=5;case 5:return a++,[3,3];case 6:return core.info("foundRunningJob for status "+_+": "+t),[2,t]}})})}function run(){return __awaiter(this,void 0,Promise,function(){var t,r,n,o,u,i,a,s,c,l,f,h;return __generator(this,function(e){switch(e.label){case 0:e.trys.push([0,5,,6]),t=core.getInput("token",{required:!0}),r=core.getInput("currentRunId",{required:!0}),n=core.getInput("runnerLabel",{required:!0}),void 0===(o=utils_1.getOptionalInput("repo"))&&(o=utils_1.getRepository()),u=utils_1.getOwnerAndRepo(o),i=u[0],a=u[1],core.info("Full Repot "+o+", owner "+i+", repo "+a),core.info("Checking if there are any running runners with lable "+n+" which are different to run id "+r),s=!1,c=0,l=["requested","queued","in_progress","pending"],e.label=1;case 1:return c<l.length?(f=l[c],[4,checkWorkflow(t,i,a,f,r,n)]):[3,4];case 2:if(s=e.sent())return[3,4];e.label=3;case 3:return c++,[3,1];case 4:return core.info("foundRunningJob: "+s),core.setOutput("foundRunningJob",s),[3,6];case 5:return h=e.sent(),core.setFailed("Failed with error: "+h),[3,6];case 6:return[2]}})})}run();
//# sourceMappingURL=index.min.js.map
