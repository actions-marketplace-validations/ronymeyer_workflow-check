"use strict";var __awaiter=this&&this.__awaiter||function(e,i,a,s){return new(a=a||Promise)(function(r,t){function n(e){try{u(s.next(e))}catch(e){t(e)}}function o(e){try{u(s.throw(e))}catch(e){t(e)}}function u(e){e.done?r(e.value):function(r){return r instanceof a?r:new a(function(e){e(r)})}(e.value).then(n,o)}u((s=s.apply(e,i||[])).next())})},__generator=this&&this.__generator||function(t,n){var o,u,i,e,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return e={next:r(0),throw:r(1),return:r(2)},"function"==typeof Symbol&&(e[Symbol.iterator]=function(){return this}),e;function r(r){return function(e){return function(r){if(o)throw new TypeError("Generator is already executing.");for(;a;)try{if(o=1,u&&(i=2&r[0]?u.return:r[0]?u.throw||((i=u.return)&&i.call(u),0):u.next)&&!(i=i.call(u,r[1])).done)return i;switch(u=0,i&&(r=[2&r[0],i.value]),r[0]){case 0:case 1:i=r;break;case 4:return a.label++,{value:r[1],done:!1};case 5:a.label++,u=r[1],r=[0];continue;case 7:r=a.ops.pop(),a.trys.pop();continue;default:if(!(i=0<(i=a.trys).length&&i[i.length-1])&&(6===r[0]||2===r[0])){a=0;continue}if(3===r[0]&&(!i||r[1]>i[0]&&r[1]<i[3])){a.label=r[1];break}if(6===r[0]&&a.label<i[1]){a.label=i[1],i=r;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(r);break}i[2]&&a.ops.pop(),a.trys.pop();continue}r=n.call(t,a)}catch(e){r=[6,e],u=0}finally{o=i=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,e])}}};exports.__esModule=!0;var core=require("@actions/core"),rest_1=require("@octokit/rest"),utils_1=require("./utils");function checkWorkflow(e,d,h,p,b,w){return __awaiter(this,void 0,Promise,function(){var r,t,n,o,u,i,a,s,c,l,f;return __generator(this,function(e){switch(e.label){case 0:return r=!1,(t=new rest_1.Octokit).actions.listWorkflowRunsForRepo(),[4,t.rest.actions.listWorkflowRunsForRepo({owner:d,repo:h,status:p})];case 1:n=e.sent(),core.info("Received status code: "+n.status+", number or results: "+n.data.total_count),o=n.data.workflow_runs.filter(function(e){return e.id!=Number(b)}),u=o.map(function(e){return{run_id:e.id,name:e.name}}),i=0,a=u,e.label=2;case 2:return i<a.length?(s=a[i],[4,t.rest.actions.listJobsForWorkflowRun({owner:d,repo:h,run_id:s.run_id})]):[3,5];case 3:for(c=e.sent(),core.info("Received status code: "+c.status+", number or results: "+c.data.total_count),l=0,f=c.data.jobs;l<f.length;l++)if(f[l].labels.includes(w)){r=!0;break}if(r)return[3,5];e.label=4;case 4:return i++,[3,2];case 5:return core.info("foundRunningJob for status "+p+": "+r),[2,r]}})})}function run(){return __awaiter(this,void 0,Promise,function(){var r,t,n,o,u,i,a,s,c,l,f,d;return __generator(this,function(e){switch(e.label){case 0:e.trys.push([0,5,,6]),r=core.getInput("token",{required:!0}),t=core.getInput("currentRunId",{required:!0}),n=core.getInput("runnerLabel",{required:!0}),void 0===(o=utils_1.getOptionalInput("repo"))&&(o=utils_1.getRepository()),u=utils_1.getOwnerAndRepo(o),i=u[0],a=u[1],core.info("Full Repot "+o+", owner "+i+", repo "+a),core.info("Checking if there are any running runners with lable "+n+" which are different to run id "+t),s=!1,c=0,l=["requested","queued","in_progress","pending"],e.label=1;case 1:return c<l.length?(f=l[c],[4,checkWorkflow(r,i,a,f,t,n)]):[3,4];case 2:if(s=e.sent())return[3,4];e.label=3;case 3:return c++,[3,1];case 4:return core.info("foundRunningJob: "+s),core.setOutput("foundRunningJob",s),[3,6];case 5:return d=e.sent(),core.setFailed("Failed with error: "+d),[3,6];case 6:return[2]}})})}run();
//# sourceMappingURL=index.min.js.map
