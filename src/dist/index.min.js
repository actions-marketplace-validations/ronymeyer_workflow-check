"use strict";var __awaiter=this&&this.__awaiter||function(e,u,a,s){return new(a=a||Promise)(function(r,n){function t(e){try{i(s.next(e))}catch(e){n(e)}}function o(e){try{i(s.throw(e))}catch(e){n(e)}}function i(e){e.done?r(e.value):function(r){return r instanceof a?r:new a(function(e){e(r)})}(e.value).then(t,o)}i((s=s.apply(e,u||[])).next())})},__generator=this&&this.__generator||function(n,t){var o,i,u,e,a={label:0,sent:function(){if(1&u[0])throw u[1];return u[1]},trys:[],ops:[]};return e={next:r(0),throw:r(1),return:r(2)},"function"==typeof Symbol&&(e[Symbol.iterator]=function(){return this}),e;function r(r){return function(e){return function(r){if(o)throw new TypeError("Generator is already executing.");for(;a;)try{if(o=1,i&&(u=2&r[0]?i.return:r[0]?i.throw||((u=i.return)&&u.call(i),0):i.next)&&!(u=u.call(i,r[1])).done)return u;switch(i=0,u&&(r=[2&r[0],u.value]),r[0]){case 0:case 1:u=r;break;case 4:return a.label++,{value:r[1],done:!1};case 5:a.label++,i=r[1],r=[0];continue;case 7:r=a.ops.pop(),a.trys.pop();continue;default:if(!(u=0<(u=a.trys).length&&u[u.length-1])&&(6===r[0]||2===r[0])){a=0;continue}if(3===r[0]&&(!u||r[1]>u[0]&&r[1]<u[3])){a.label=r[1];break}if(6===r[0]&&a.label<u[1]){a.label=u[1],u=r;break}if(u&&a.label<u[2]){a.label=u[2],a.ops.push(r);break}u[2]&&a.ops.pop(),a.trys.pop();continue}r=t.call(n,a)}catch(e){r=[6,e],i=0}finally{o=u=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,e])}}};exports.__esModule=!0;var core=require("@actions/core"),rest_1=require("@octokit/rest"),utils_1=require("./utils"),auth_action_1=require("@octokit/auth-action");function checkWorkflow(f,h,d,p,w,b){return __awaiter(this,void 0,Promise,function(){var r,n,t,o,i,u,a,s,c,l;return __generator(this,function(e){switch(e.label){case 0:return r=!1,core.info("Start checking for status "+p+"."),core.info("Using owner "+h+" and repo "+d+"."),[4,f.request("GET /repos/{owner}/{repo}/actions/runs",{owner:h,repo:d,status:p})];case 1:n=e.sent(),core.info("Check Runs: Received status code: "+n.status+", number or results: "+n.data.total_count+"."),t=n.data.workflow_runs.filter(function(e){return e.id!=Number(w)}),o=t.map(function(e){return{run_id:e.id,name:e.name}}),i=0,u=o,e.label=2;case 2:return i<u.length?(a=u[i],core.info("Checking for jobs with status "+p+" and runner label "+b+"."),"pending"==p?(core.info("There are pending jobs, for pending jobs there is no run_id yet, so we can't get the label."),r=!0,[3,5]):[4,f.rest.actions.listJobsForWorkflowRun({owner:h,repo:d,run_id:a.run_id})]):[3,5];case 3:for(s=e.sent(),core.info("Check Workflow Run "+a.run_id+" with name '"+a.name+"'. Received status code: "+s.status+", number or results: "+s.data.total_count+"."),c=0,l=s.data.jobs;c<l.length;c++)if(l[c].labels.includes(b)){r=!0;break}if(r)return[3,5];e.label=4;case 4:return i++,[3,2];case 5:return core.info("End checking for status "+p+". foundRunningJob: "+r),[2,r]}})})}function run(){return __awaiter(this,void 0,Promise,function(){var r,n,t,o,i,u,a,s,c,l,f,h,d,p;return __generator(this,function(e){switch(e.label){case 0:return e.trys.push([0,6,,7]),r=core.getInput("currentRunId",{required:!0}),n=core.getInput("runnerLabel",{required:!0}),void 0===(t=utils_1.getOptionalInput("repo"))&&(t=utils_1.getRepository()),o=utils_1.getOwnerAndRepo(t),i=o[0],u=o[1],core.info("Checking if there are any running runners with label "+n+" which are different to run id "+r),a=!1,[4,auth_action_1.createActionAuth()()];case 1:s=e.sent(),core.info("Auth token type "+s.tokenType+", token "+s.token.length+", owner "+i+", repo "+u),c=new rest_1.Octokit({auth:s.token}),l=0,f=["pending","requested","queued","in_progress"],e.label=2;case 2:return l<f.length?(h=f[l],[4,checkWorkflow(c,i,u,h,r,n)]):[3,5];case 3:if(a=e.sent())return[3,5];e.label=4;case 4:return l++,[3,2];case 5:return core.info("foundRunningJob: "+a),core.setOutput("foundRunningJob",a),[3,7];case 6:return d=e.sent(),p=ensureError(d),core.setFailed("Failed with error: "+p.message+"."),[3,7];case 7:return[2]}})})}function ensureError(e){if(e instanceof Error)return e;var r="[Unable to stringify the thrown value]";try{r=JSON.stringify(e)}catch(e){}return new Error("This value was thrown as is, not through an Error: "+r)}run();
//# sourceMappingURL=index.min.js.map
